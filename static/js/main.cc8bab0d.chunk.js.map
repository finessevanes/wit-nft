{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["greeterAddress","App","useState","greeting","setGreetingValue","requestAccount","a","window","ethereum","request","method","fetchGreeting","provider","ethers","providers","Web3Provider","contract","Contract","Greeter","abi","greet","data","console","log","signer","getSigner","setGreeting","transaction","wait","className","onChange","e","target","value","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w3VAKMA,EAAiB,6CAsERC,MApEf,WACE,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAiBC,EAAjB,KADa,SAGEC,IAHF,2EAGb,sBAAAC,EAAA,sEACQC,OAAOC,SAASC,QAAQ,CAAEC,OAAQ,wBAD1C,4CAHa,+BAOEC,IAPF,2EAOb,gCAAAL,EAAA,yDACiC,qBAApBC,OAAOC,SADpB,wBAEUI,EAAW,IAAIC,IAAOC,UAAUC,aAAaR,OAAOC,UACpDQ,EAAW,IAAIH,IAAOI,SAASjB,EAAgBkB,EAAQC,IAAKP,GAHtE,kBAKyBI,EAASI,QALlC,OAKYC,EALZ,OAMMC,QAAQC,IAAI,SAAUF,GAN5B,kDAQMC,QAAQC,IAAI,UAAZ,MARN,2DAPa,kEAoBb,kCAAAjB,EAAA,yDACOH,EADP,oDAEiC,qBAApBI,OAAOC,SAFpB,iCAGUH,IAHV,cAIUO,EAAW,IAAIC,IAAOC,UAAUC,aAAaR,OAAOC,UACpDgB,EAASZ,EAASa,YAClBT,EAAW,IAAIH,IAAOI,SAASjB,EAAgBkB,EAAQC,IAAKK,GANtE,UAO8BR,EAASU,YAAYvB,GAPnD,eAOUwB,EAPV,OAQIvB,EAAiB,IARrB,UASUuB,EAAYC,OATtB,QAUIjB,IAVJ,6CApBa,sBAkCb,OACE,qBAAKkB,UAAU,4BAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBAAMA,UAAU,iDAAhB,UACE,qBAAKA,UAAU,OAAf,SACE,uBACEC,SAAU,SAAAC,GAAC,OAAI3B,EAAiB2B,EAAEC,OAAOC,QACzCJ,UAAU,6HAA6HK,KAAK,WAEhJ,sBAAKL,UAAU,oCAAf,UACE,wBACEM,QAASxB,EACTkB,UAAU,uEACVK,KAAK,SAHP,mBAOA,wBACEC,QArDD,2CAsDCN,UAAU,uEACVK,KAAK,SAHP,8BC/CCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc8bab0d.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { ethers } from 'ethers'\nimport Greeter from './artifacts/contracts/Greeter.sol/Greeter.json'\n\nconst greeterAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";\n\nfunction App() {\n  const [greeting, setGreetingValue] = useState(\"\");\n\n  async function requestAccount() {\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\n  }\n  \n  async function fetchGreeting() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, provider)\n      try {\n        const data = await contract.greet()\n        console.log('data: ', data)\n      } catch (err) {\n        console.log(\"Error: \", err)\n      }\n    }\n  }\n  \n  async function setGreeting() {\n    if (!greeting) return\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount()\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner()\n      const contract = new ethers.Contract(greeterAddress, Greeter.abi, signer)\n      const transaction = await contract.setGreeting(greeting)\n      setGreetingValue(\"\");\n      await transaction.wait()\n      fetchGreeting()\n    }\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-200\">\n      <div className=\"m-auto\">\n        <div className=\"w-full max-w-xs\">\n          <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\">\n            <div className=\"mb-4\">\n              <input\n                onChange={e => setGreetingValue(e.target.value)}\n                className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" type=\"text\" />\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <button\n                onClick={fetchGreeting}\n                className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\"\n                type=\"button\"\n              >\n                Fetch\n              </button>\n              <button\n                onClick={setGreeting}\n                className=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\"\n                type=\"button\"\n              >\n                Set\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}